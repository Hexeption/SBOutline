plugins {
    id "idea"
    id 'java'
    id "dev.architectury.architectury-pack200" version "0.1.3"
    id "gg.essential.loom" version "0.10.0.+"
    id "net.kyori.blossom" version "1.3.0"
}

group 'uk.co.hexeption'
version '1.0.0'
archivesBaseName = 'SBOutline'

java {
    toolchain.languageVersion.set(JavaLanguageVersion.of(8))
}

loom {
    launchConfigs {
        client {
            arg("--tweakClass", "cc.polyfrost.oneconfigwrapper.OneConfigWrapper")
        }
    }
    runs {
        "client" {
            property('devauth.enabled','true')
            client()
        }
    }
    forge {
        pack200Provider.set(new dev.architectury.pack200.java.Pack200Adapter())
    }
}

configurations {
    include
    implementation.extendsFrom(include)
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven {url "https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1"}
    maven { url 'https://repo.polyfrost.cc/releases' }
}

dependencies {
    minecraft("com.mojang:minecraft:1.8.9")
    mappings("de.oceanlabs.mcp:mcp_stable:22-1.8.9")
    forge("net.minecraftforge:forge:1.8.9-11.15.1.2318-1.8.9")

    compileOnly('cc.polyfrost:oneconfig-1.8.9-forge:0.2.0-alpha+')
    include('cc.polyfrost:oneconfig-wrapper-launchwrapper:1.0.0-alpha+')

    modRuntimeOnly("me.djtheredstoner:DevAuth-forge-legacy:1.1.0")
}

test {
    useJUnitPlatform()
}

jar {
    dependsOn configurations.include

    manifest.attributes(
            'ModSide': 'CLIENT',
            'ForceLoadAsMod': true,
            "TweakOrder": "0",
            'TweakClass': "cc.polyfrost.oneconfigwrapper.OneConfigWrapper"
    )
}